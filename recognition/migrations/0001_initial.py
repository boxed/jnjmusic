# Generated by Django 5.1.5 on 2025-06-14 13:48

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RecognitionSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('videos_processed', models.IntegerField(default=0)),
                ('songs_recognized', models.IntegerField(default=0)),
                ('segment_length', models.IntegerField(default=30)),
                ('overlap', models.IntegerField(default=5)),
                ('service', models.CharField(default='acrcloud', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='YouTubeVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=500)),
                ('channel', models.CharField(blank=True, max_length=200)),
                ('duration', models.IntegerField(help_text='Duration in seconds', null=True)),
                ('description', models.TextField(blank=True)),
                ('downloaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_hash', models.CharField(blank=True, db_index=True, max_length=64)),
                ('processed', models.BooleanField(default=False)),
                ('error', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-downloaded_at'],
                'indexes': [models.Index(fields=['processed', 'downloaded_at'], name='recognition_process_42c122_idx')],
            },
        ),
        migrations.CreateModel(
            name='SpotifyPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('spotify_id', models.CharField(max_length=50, unique=True)),
                ('spotify_url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('tracks_added', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlists', to='recognition.youtubevideo')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecognitionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_start', models.FloatField(help_text='Start time in seconds')),
                ('timestamp_end', models.FloatField(help_text='End time in seconds')),
                ('title', models.CharField(max_length=500)),
                ('artists', models.JSONField(default=list)),
                ('album', models.CharField(blank=True, max_length=500)),
                ('duration_ms', models.IntegerField(null=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('spotify_id', models.CharField(blank=True, db_index=True, max_length=50)),
                ('isrc', models.CharField(blank=True, max_length=20)),
                ('external_ids', models.JSONField(default=dict)),
                ('genres', models.JSONField(default=list)),
                ('release_date', models.CharField(blank=True, max_length=20)),
                ('label', models.CharField(blank=True, max_length=200)),
                ('service', models.CharField(default='acrcloud', max_length=50)),
                ('raw_result', models.JSONField(blank=True, null=True)),
                ('recognized_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recognition_results', to='recognition.youtubevideo')),
            ],
            options={
                'ordering': ['video', 'timestamp_start'],
                'indexes': [models.Index(fields=['spotify_id'], name='recognition_spotify_e97d2c_idx'), models.Index(fields=['title', 'artists'], name='recognition_title_f216ad_idx')],
                'unique_together': {('video', 'timestamp_start', 'title')},
            },
        ),
        migrations.CreateModel(
            name='AudioSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=500)),
                ('start_time', models.FloatField()),
                ('end_time', models.FloatField()),
                ('duration', models.FloatField()),
                ('processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_segments', to='recognition.youtubevideo')),
            ],
            options={
                'ordering': ['video', 'start_time'],
                'unique_together': {('video', 'start_time', 'end_time')},
            },
        ),
    ]
